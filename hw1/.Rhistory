# per capita fits
deaths_fit = lm(data = mvote_data, no_share ~ mass_per_1000)
deaths_turnout_fit = lm(data = mvote_data, no_share ~ mass_per_1000 + turnout)
plot(mvote_data$mass_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Civilian Killings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Civilian Killings (per 1000 citizens)")
abline(deaths_fit, col = "blue", lwd = 2.5)
abline(deaths_turnout_fit, col = "red", lwd = 2.5)
legend(4.5, 20, c("Massacres Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
missing_fit = lm(data = mvote_data, no_share ~ kidnap_per_1000)
missing_turnout_fit = lm(data = mvote_data, no_share ~ kidnap_per_1000 + turnout)
plot(mvote_data$kidnap_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Kidnappings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Kidnappings (per 1000 citizens)")
abline(missing_fit, col = "blue", lwd = 2.5)
abline(missing_turnout_fit, col = "red", lwd = 2.5)
legend(11, 20, c("Kidnaps Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
turnout_fit = lm(data = mvote_data, no_share ~ turnout)
full_per_1000 = lm(data = mvote_data, no_share ~ turnout + kidnap_per_1000 + mass_per_1000)
plot(mvote_data$turnout, mvote_data$no_share,
main = "No Vote Share vs. Turnout with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Voter Turnout (percent)")
abline(turnout_fit, col = "blue", lwd = 2.5)
abline(full, col = "red", lwd = 2.5)
legend(0, 85, c("Turnout Only", "Including Rebel Violence"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
par(mfrow = c(1, 1))
kill_fit = lm(data = mvote_data, no_share ~ massacre_FARC)
kill_turnout_fit = lm(data = mvote_data, no_share ~ massacre_FARC + turnout)
plot(mvote_data$massacre_FARC, mvote_data$no_share,
main = "No Vote Share vs. Civilian Killings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Number of Civilian Killings")
abline(kill_fit, col = "blue", lwd = 2.5)
abline(kill_turnout_fit, col = "red", lwd = 2.5)
legend(4.5, 20, c("Massacres Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
kidnap_fit = lm(data = mvote_data, no_share ~ kidnap_civil_FARC)
kidnap_turnout_fit = lm(data = mvote_data, no_share ~ kidnap_civil_FARC + turnout)
plot(mvote_data$kidnap_civil_FARC, mvote_data$no_share,
main = "No Vote Share vs. Kidnappings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Number of Kidnappings")
abline(kidnap_fit, col = "blue", lwd = 2.5)
abline(kidnap_turnout_fit, col = "red", lwd = 2.5)
legend(11, 20, c("Kidnaps Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
turnout_fit = lm(data = mvote_data, no_share ~ turnout)
full = lm(data = mvote_data, no_share ~ turnout + kidnap_civil_FARC + massacre_FARC)
plot(mvote_data$turnout, mvote_data$no_share,
main = "No Vote Share vs. Turnout with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Voter Turnout (percent)")
abline(turnout_fit, col = "blue", lwd = 2.5)
abline(full, col = "red", lwd = 2.5)
legend(0, 85, c("Turnout Only", "Including Rebel Violence"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
violence_fit = lm(data = mvote_data, no_share ~ massacre_FARC + kidnap_civil_FARC)
# turnout fits
kidnaps = lm(turnout ~ kidnap_civil_FARC, data = mvote_data)
killings = lm(turnout ~ massacre_FARC, data = mvote_data)
mvote_data$mass_per_1000 = 1000*(mvote_data$massacre_FARC/mvote_data$population)
mvote_data$kidnap_per_1000 = 1000*(mvote_data$kidnap_civil_FARC/mvote_data$population)
# per capita fits
deaths_fit = lm(data = mvote_data, no_share ~ mass_per_1000)
deaths_turnout_fit = lm(data = mvote_data, no_share ~ mass_per_1000 + turnout)
plot(mvote_data$mass_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Civilian Killings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Civilian Killings (per 1000 citizens)")
abline(deaths_fit, col = "blue", lwd = 2.5)
abline(deaths_turnout_fit, col = "red", lwd = 2.5)
legend(4.5, 20, c("Massacres Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
missing_fit = lm(data = mvote_data, no_share ~ kidnap_per_1000)
missing_turnout_fit = lm(data = mvote_data, no_share ~ kidnap_per_1000 + turnout)
plot(mvote_data$kidnap_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Kidnappings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Kidnappings (per 1000 citizens)")
abline(missing_fit, col = "blue", lwd = 2.5)
abline(missing_turnout_fit, col = "red", lwd = 2.5)
legend(11, 20, c("Kidnaps Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
turnout_fit = lm(data = mvote_data, no_share ~ turnout)
full_per_1000 = lm(data = mvote_data, no_share ~ turnout + kidnap_per_1000 + mass_per_1000)
plot(mvote_data$turnout, mvote_data$no_share,
main = "No Vote Share vs. Turnout with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Voter Turnout (percent)")
abline(turnout_fit, col = "blue", lwd = 2.5)
abline(full, col = "red", lwd = 2.5)
legend(0, 85, c("Turnout Only", "Including Rebel Violence"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
violence_per_fit = lm(data = mvote_data, no_share ~ mass_per_1000 + kidnap_per_1000)
plot(mvote_data$kidnap_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Kidnappings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Kidnappings (per 1000 citizens)")
abline(missing_fit, col = "blue", lwd = 2.5)
abline(missing_turnout_fit, col = "red", lwd = 2.5)
legend(0.4, 20, c("Kidnaps Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
plot(mvote_data$kidnap_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Kidnappings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Kidnappings (per 1000 citizens)")
abline(missing_fit, col = "blue", lwd = 2.5)
abline(missing_turnout_fit, col = "red", lwd = 2.5)
legend(1.5, 20, c("Kidnaps Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
plot(mvote_data$mass_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Civilian Killings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Civilian Killings (per 1000 citizens)")
abline(deaths_fit, col = "blue", lwd = 2.5)
abline(deaths_turnout_fit, col = "red", lwd = 2.5)
legend(4.5, 20, c("Massacres Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
plot(mvote_data$mass_per_1000, mvote_data$no_share,
main = "No Vote Share vs. Civilian Killings with Lines of Best Fit",
ylab = "No Vote Share (percent)",
xlab = "Civilian Killings (per 1000 citizens)")
abline(deaths_fit, col = "blue", lwd = 2.5)
abline(deaths_turnout_fit, col = "red", lwd = 2.5)
legend(0.45, 20, c("Massacres Only", "Including Voter Turnout"),
lty = c(1, 1), lwd = c(2.5, 2.5), col = c("blue", "red"))
library(readstata13)
keilmc_data = read.dta13("/Users/ratulesrar/Documents/Fourth Year/Winter Quarter/STAT 2/Problem Sets/PS6/KIELMC.dta")
View(keilmc_data)
View(keilmc_data)
kielmc_data = read.dta13("/Users/ratulesrar/Documents/Fourth Year/Winter Quarter/STAT 2/Problem Sets/PS6/KIELMC.dta")
kielmc_1981 = kielmc_data$year == 1981
keilmc_1981
kiwlmc_1981
kielmc_1981
kielmc_1981 = kielmc_data[180:]
kielmc_1981 = kielmc_data[180:321]
kielmc_1981 = kielmc_data[kielmc_data$year == 1981]
kielmc_1981 = kielmc_data$kielmc_data$year == 1981
kielmc_1981 = kielmc_data[which(kielmc_data$year == 1981), ]
View(kielmc_1981)
kiel1 = lm(data = kielmc_1981, lrprice ~ nearinc)
summary(kiel1)
kiel2 = lm(data = kielmc_1981, lrprice ~ age, agesq, rooms, baths, lintst, larea, lland)
kiel2 = lm(data = kielmc_1981, lrprice ~ age, agesq, rooms, baths, lintst, larea, lland)
kiel2 = lm(data = kielmc_1981, lrprice ~ age + agesq + rooms + baths + lintst + larea + lland + nearinc)
summary(kiel2)
kiel_1979 = kielmc_data[which(kielmc_data$year == 1979), ]
kiel3 = lm(data = kielmc_1981, lrprice ~ nearinc)
summary(kiel3)
kiel_1979 = kielmc_data[which(kielmc_data$year == 1979), ]
kiel3 = lm(data = kielmc_1979, lrprice ~ nearinc)
kiel_1979 = kielmc_data[which(kielmc_data$year == 1979), ]
kiel3 = lm(data = kiel_1979, lrprice ~ nearinc)
kielmc_1979 = kielmc_data[which(kielmc_data$year == 1979), ]
kiel3 = lm(data = kielmc_1979, lrprice ~ nearinc)
kielmc_1979 = kielmc_data[which(kielmc_data$year == 1979), ]
kielmc_1978 = kielmc_data[which(kielmc_data$year == 1978), ]
kiel3 = lm(data = kielmc_1978, lrprice ~ nearinc)
summary(kiel3)
kielmc_data$y81 = factor(with(kielmc_data, ifelse((year == 1981), 1, 0)))
kiel4 = lm(data = kielmc_data, lrprice ~ nearinc + y81 + y81nearinc)
kiel4 = lm(data = kielmc_data, lrprice ~ nearinc + y81 + y81nrinc)
summary(kiel4)
kiel5 = lm(data = kielmc_data, lrprice ~ nearinc + y81 + y81nrinc + age + agesq + rooms + baths + lintst + larea + lland)
summary(kiel5)
vote2_data = read.dta13("/Users/ratulesrar/Documents/Fourth Year/Winter Quarter/STAT 2/Problem Sets/PS6/VOTE2.dta")
card_data = read.dta13("/Users/ratulesrar/Documents/Fourth Year/Winter Quarter/STAT 2/Problem Sets/PS6/CARD.dta")
View(card_data)
card1 = lm(data = card_data, IQ ~ nearc4)
summary(card1)
card2 = lm(data = card_data, IQ ~ nearc4 + smsa66 + reg662 + reg669)
card2 = lm(data = card_data, IQ ~ nearc4 + smsa66 + reg662 + reg669)
summary(card2)
card2 = lm(data = card_data, IQ ~ nearc4 + smsa66 + reg661 + reg662 + reg663 + reg664 + reg665 + reg666 + reg667 + reg668 + reg669)
summary(card2)
summary(kiel1)
vote1 = lm(data = vote2_data, cvote ~ democ + clinexp + clchexp + cincshr)
summary(vote1)
vote2 = lm(data = vote2_data, cvote ~ clinexp + clchexp)
summary(vote2)
vote3 = lm(data = vote2_data, cvote ~ cincshr)
summary(vote3)
View(vote2_data)
View(vote2_data)
vote_rptchall = vote2_data[which(vote2_data$rptchall == 1), ]
vote4 = lm(data = vote_rptchall, cvote ~ cincshr)
summary(vote4)
install.packages(readr, haven, tidyr, stringr, ggplot2)
install.packages(readr, haven, stringr, ggplot2)
install.packages(readr)
install.packages(tidyr)
install.packages(haven)
install.packages(stringr)
install.packages(ggplot2)
install.packages(readr)
install.packages('readr')
install.packages('tidyr')
install.packages('haven')
install.packages('stringr')
install.packages('ggplot2')
libary(readr, haven, dplyr, tidyr, stringr, ggplot2)
library(readr, haven, dplyr, tidyr, stringr, ggplot2)
library(readr, haven, dplyr, stringr, ggplot2)
library(readr)
library(readr)
library(haven)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
getwd()
setwd('/Users/ratulesrar/Desktop/data_viz_pbpl/hw1/')
?read_sas
sas_file <- 'accident.sas7bdat'
csv_file <- 'accident.csv'
?read_csv
acc2014 <- read_sas(sas_file)
acc2015 <- read_csv(csv_file)
ls()
head(acc2014)
class(acc2014)
class(acc2014)
class(acc2015)
View(acc2014)
head(acc2014$TWAY_ID2)
head(acc2015$TWAY_ID2)
na_if(acc2014$TWAY_ID2, "")
head(acc2015$TWAY_ID2)
na_if(acc2014$TWAY_ID2, "")
na_if(acc2014$TWAY_ID2, "")
acc2014 <- read_sas(sas_file)
acc2015 <- read_csv(csv_file)
View(acc2015)
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
acc2014
acc2014$TWAY_ID2
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
?colnames
colnames(acc2014 %in% acc2015)
acc2014[[1]]
acc2014[["TWAY_ID2"]]
data <- read_xlsx('Week1-SCE-Public-LM-Quarterly-Microdata.xlsx', sheet = 'Data 2013', skip = 1)
library(readxl, tidyverse)
data <- read_xlsx('Week1-SCE-Public-LM-Quarterly-Microdata.xlsx', sheet = 'Data 2013', skip = 1)
getwd()
setwd("/Users/ratulesrar/Desktop/"
)
data <- read_xlsx('Week1-SCE-Public-LM-Quarterly-Microdata.xlsx', sheet = 'Data 2013', skip = 1)
head(data)
View(data)
data <- read_xlsx('Week1-SCE-Public-LM-Quarterly-Microdata.xlsx')
head(data)
data <- read_xlsx('Week1-SCE-Public-LM-Quarterly-Microdata.xlsx', sheet = 'Data 2013', skip = 1)
select(data, L1_rc, HH2, L6)
select(data, L1_rc, HH2, L6)
data$L1_rc == 1
table(select(data, L1_rc, HH2, L6))
getwd()
setwd('/Users/ratulesrar/Desktop/data_viz_pbpl/hw1/')
fips <- read_csv('fips.csv', skip = 1)
head(fips)
View(fips)
glimpse(fips)
acc <- bind_rows(acc2014, acc2015)
count(acc$RUR_URB)
View(acc)
?count()
?count
count(acc)
count(acc[["RUR_URB"]])
count(acc, RUR_URB)
-- Do this everytime you reopen R.
library(readxl)
library(tidyverse)
getwd() # look at the format of your getwd and adjust it to point to your stats1 folder
setwd("/Users/ratulesrar/Desktop/") #  YOU NEED A SPECIFIC PATH TO THE stats1 FOLDER YOU JUST MADE ON YOUR DESKTOP )
rm(list=ls())
data <- read_xlsx("SCE-Public-LM-Quarterly-Microdata.xlsx")
head(data)
data <- read_xlsx("SCE-Public-LM-Quarterly-Microdata.xlsx", sheet = "Data 2013", skip = 1)
data$L1_rc
head(data$L1_rc)
head(data$HH2)
data$HH2
select(data, L1_rc, HH2. L10)
select(data, L1_rc, HH2, L10)
data <- select(data, L1_rc, HH2, L10)
head(data)
data$L1_rc == 1
data <- filter(data, L1_rc == 1)
View(data)
data <- mutate(data, married = as.numeric(!is.na(HH2)), overtime = ifelse(L10 > 40, 1, 0))
library(readr)
library(haven)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
setwd('/Users/ratulesrar/Desktop/data_viz_pbpl/hw1/')
sas_file <- 'accident.sas7bdat'
csv_file <- 'accident.csv'
acc2014 <- read_sas(sas_file)
acc2015 <- read_csv(csv_file)
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
names(acc2014)[!names(acc2014) %in% names(acc2015)]
names(acc2014)[names(acc2014) %in% names(acc2015)]
names(acc2014)[!names(acc2014) %in% names(acc2015)]
names(acc2015)[!names(acc2015) %in% names(acc2014)]
names(acc2015)[!names(acc2015) %in% names(acc2014)]
names(acc2014)[!names(acc2014) %in% names(acc2015)]
acc <- bind_rows(acc2014, acc2015)
acc$STATE
fips <- read_csv('fips.csv')
head(fips)
glimpse(fips)
toString(acc$STATE)
View(acc)
typeof(acc$STATE)
acc <- toString(acc$STATE)
acc <- bind_rows(acc2014, acc2015)
is.numeric(acc$STATE)
acc <- acc$STATE %>% mutate_if(is.numeric, as.character)
acc <- acc$STATE %>% mutate_if(is.double, as.character)
is.double(acc$STATE)
acc <- mutate(acc, STATE = as.character(STATE))
is.double(acc$STATE)
acc <- mutate(acc, STATE = as.character(STATE), COUNTY = as.character(COUNTY))
acc$COUNTY
is.double(acc$COUNTY)
str_pad("hadley", 30, "left")
str_pad("hadley", 1, "left", "0")
str_pad("hadley", 1, "left", "123")
str_pad("hadley", 1, "left", pad = " ")
str_pad("hadley", 10, "left", pad = " ")
str_pad("hadley", 10, "left", pad = "0")
str_pad("hadley", 2, "left", pad = "0")
str_pad("hadley", 9, "left", pad = "0")
str_pad("hadley", 8, "left", pad = "0")
str_pad("hadley", 7, "left", pad = "0")
str_pad("1", 7, "left", pad = "0")
str_pad("1", 1, "left", pad = "0")
str_pad("1", 2, "left", pad = "0")
acc <- mutate(acc, STATE = str_pad(STATE, 2, "left", "0"))
acc$STATE
acc$COUNTY
str_pad("1", 2, "left", pad = "0")
str_pad("1", 3, "left", pad = "0")
str_pad("19", 3, "left", pad = "0")
acc <- mutate(acc, STATE = str_pad(STATE, 2, "left", "0"), COUNTY = str_pad(COUNTY, 3, "left", pad = "0"))
str_pad("19", 3, "left", pad = "0")
acc <- rename(acc ,c('STATE' = 'StateFIPSCode', 'COUNTY' = 'CountyFIPSCode'))
acc <- rename(acc , c('STATE' = 'StateFIPSCode', 'COUNTY' = 'CountyFIPSCode'))
acc <- rename(acc , 'STATE' = 'StateFIPSCode', 'COUNTY' = 'CountyFIPSCode')
acc <- rename(acc , 'StateFIPSCode' = 'STATE', 'CountyFIPSCode' = 'COUNTY')
left_join(acc, fips, by = c('StateFIPSCode', 'CountyFIPSCode'), copy = TRUE)
acc2 <- left_join(acc, fips, by = c('StateFIPSCode', 'CountyFIPSCode'), copy = TRUE)
View(acc2)
acc <- left_join(acc, fips, by = c('StateFIPSCode', 'CountyFIPSCode'), copy = TRUE)
summarize(FATALS)
summarize(acc$FATALS)
?summarize
typeof(fips$StateFIPSCode)
by_fatals <- acc %>% group_by(FATALS)
View(by_fatals)
agg <- acc %>% group_by(FATALS)
agg <- acc %>% group_by(StateName)
View(agg)
agg %>% summarize(TOTAL = sum(FATALS))
View(agg)
agg <- agg %>% summarize(TOTAL = sum(FATALS))
View(agg)
spread(agg, key = StateName, value = FATALS)
spread(agg, key = StateName, value = TOTAL)
agg_wide <- agg %>% spread(key = StateName, value = TOTAL)
View(agg_wide)
agg <- acc %>% group_by(StateName, Year)
agg <- acc %>% group_by(StateName, YEAR)
agg <- agg %>% summarize(TOTAL = sum(FATALS))
agg_wide <- agg %>% spread(key = StateName, value = TOTAL)
View(agg_wide)
mutate(agg) %>%
group_by(YEAR) %>%
mutate(pct_diff = TOTAL/lag(TOTAL) * 100) %>%
ungroup %>%
select(StateName, pct_diff)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(pct_diff = TOTAL/lag(TOTAL) * 100) %>%
ungroup %>%
select(StateName, pct_diff)
View(new)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(pct_diff = TOTAL/lag(TOTAL) * 100) %>%
ungroup %>%
select(StateName, YEAR, TOTAL, pct_diff)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(pct_diff = (TOTAL - lag(TOTAL))/TOTAL * 100) %>%
ungroup %>%
select(StateName, YEAR, TOTAL, pct_diff)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(pct_diff = (TOTAL - lag(TOTAL))/TOTAL * 100) %>%
select(StateName, YEAR, TOTAL, pct_diff)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(yoy = c(NA, diff(TOTAL)/TOTAL)) %>%
select(StateName, YEAR, TOTAL, pct_diff)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(yoy = c(NA, diff(TOTAL))) %>%
select(StateName, YEAR, TOTAL, pct_diff)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(yoy = c(NA, diff(TOTAL))) %>%
select(StateName, YEAR, TOTAL, yoy)
new <- mutate(agg) %>%
group_by(YEAR) %>%
mutate(lag = lag(TOTAL)) %>%
mutate(pct.change = (TOTAL - lag) / lag) %>%
select(StateName, YEAR, TOTAL, pct.change)
new <- mutate(agg) %>%
group_by(YEAR) %>%
summarize(difference = TOTAL[which.max(YEAR)]-TOTAL[which.min(YEAR)]) %>%
select(StateName, YEAR, TOTAL, pct.change)
new <- mutate(agg) %>%
group_by(YEAR) %>%
summarize(difference = TOTAL[which.max(YEAR)]-TOTAL[which.min(YEAR)]) %>%
select(StateName, YEAR, TOTAL, difference)
new <- mutate(agg) %>%
group_by(StateName, YEAR) %>%
summarize(difference = TOTAL[which.max(YEAR)]-TOTAL[which.min(YEAR)]) %>%
select(StateName, YEAR, TOTAL, difference)
new <- mutate(agg) %>%
group_by(StateName, YEAR) %>%
summarize(difference = TOTAL[which.max(YEAR)] - TOTAL[which.min(YEAR)])
new <- mutate(agg) %>%
group_by(YEAR) %>%
summarize(difference = TOTAL[which.max(YEAR)] - TOTAL[which.min(YEAR)])
new <- mutate(agg) %>%
group_by(StateName, YEAR, TOTAL) %>%
summarize(difference = TOTAL[which.max(YEAR)] - TOTAL[which.min(YEAR)])
?lag
new <- mutate(agg) %>%
group_by(StateName) %>%
mutate(lag = lag(TOTAL)) %>%
mutate(difference = (TOTAL - lag)/TOTAL) %>%
filter(!is.na(difference))
arrange(new, difference)
arrange(new, desc(difference))
agg_filter <- arrange(new, desc(difference))
View(agg_filter)
mutate(agg_filter) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
agg_filter <- mutate(agg_filter) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
new <- mutate(agg) %>%
group_by(StateName) %>%
mutate(lag = lag(TOTAL)) %>%
mutate(difference = (TOTAL - lag)/TOTAL) %>%
filter(!is.na(difference))
agg_filter1 <- arrange(new, desc(difference))
agg_filter2 <- mutate(agg_filter) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
View(new)
View(agg_filter1)
View(agg_filter2)
new <- mutate(agg) %>%
group_by(StateName) %>%
mutate(lag = lag(TOTAL)) %>%
mutate(difference = (TOTAL - lag)/lag) %>%
filter(!is.na(difference))
agg_filter1 <- arrange(new, desc(difference))
agg_filter2 <- mutate(agg_filter) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
View(agg_filter2)
agg_filter2 <- mutate(agg_filter) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
View(agg_filter2)
new <- mutate(agg) %>%
group_by(StateName) %>%
mutate(lag = lag(TOTAL)) %>%
mutate(difference = (TOTAL - lag)/lag) %>%
filter(!is.na(difference))
agg_filter1 <- arrange(new, desc(difference))
agg_filter2 <- mutate(agg_filter1) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
agg_filter3 <- mutate(agg) %>%
group_by(StateName) %>%
mutate(lag = lag(TOTAL)) %>%
mutate(difference = (TOTAL - lag)/lag) %>%
filter(!is.na(difference)) %>%
arrange(desc(difference)) %>%
filter(difference > 0.15) %>%
filter(!is.na(StateName))
View(agg_filter3)
